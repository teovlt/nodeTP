openapi: 3.0.2
info:
  version: 1.0.0
  title: API de gestion de contributions
  description: Cette API permet de suivre le cycle de vie d'une contribution scientifique, ses informations et ses soumissions.
  contact:
    name: 'VILLET Téo'
    email: teo.villet@etu-univ.grenoble-alpes.fr
servers:
  - url: http://localhost:3000/
paths:
  /:
    get:
      tags:
        - Laboratory
      summary: Liste toutes les données du laboratoire
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: Chaque donnée du laboratoire est retournée
          content:
            application/json:
              schema:
                type: array
                items: {}

  /contributions:
    get:
      tags:
        - Contribution
      summary: Liste toutes les contributions
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: Une liste de contributions est retournée
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contribution'
    post:
      tags:
        - Contribution
      summary: Créer une nouvelle contribution
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contribution'
      responses:
        '200':
          description: La contribution a correctement été créée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contribution'
  /contributions/{contributionId}:
    get:
      tags:
        - Contribution
      summary: Retourne une contribution
      parameters:
        - name: contributionId
          in: path
          description: L'id de la contribution.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: La contribution {contributionId} a été retournée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contribution'
    put:
      tags:
        - Contribution
      summary: Modifie une contribution
      parameters:
        - name: contributionId
          in: path
          description: L'id de la contribution.
          required: true
          schema:
            type: integer
      requestBody:
        description: Modifie une contribution possédant l'id {contributionId}
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contribution'
      responses:
        '200':
          description: La contribution a correctement été mise à jour.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contribution'
    delete:
      tags:
        - Contribution
      summary: Supprime une contribution
      parameters:
        - name: contributionId
          in: path
          description: L'id de la contribution.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: La contribution {contributionId} a correctement été supprimée.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contribution'
  /contributions/{contributionId}/team:
    get:
      tags:
        - Contribution
      summary: Retourne l'équipe associé a une contribution
      parameters:
        - name: contributionId
          in: path
          description: L'id de la contribution.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: L'équipe de la contribution {contributionId} a été retournée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
  /teams:
    get:
      tags:
        - Team
      summary: Liste toutes les équipes
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: Une liste d'équipes est retournée
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
    post:
      tags:
        - Team
      summary: Créer une nouvelle équipe
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '200':
          description: La contribution a correctement été créée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
  /teams/{teamId}:
    get:
      tags:
        - Team
      summary: Retourne une équipe
      parameters:
        - name: teamId
          in: path
          description: L'id de l'équipe.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: L'équipe {teamId} a été retournée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contribution'
    put:
      tags:
        - Team
      summary: Modifie une équipe
      parameters:
        - name: teamId
          in: path
          description: L'id de l'équipe.
          required: true
          schema:
            type: integer
      requestBody:
        description: Modifie une équipe possédant l'id {teamId}
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '200':
          description: L'équipe a correctement été mise à jour.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
    delete:
      tags:
        - Team
      summary: Supprime une équipe
      parameters:
        - name: teamId
          in: path
          description: L'id de l'équipe.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: L'équipe {teamId} a correctement été supprimée.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
  /teams/{teamId}/authors:
    get:
      tags:
        - Team
      summary: Retourne les auteurs d'une meme équipe
      parameters:
        - name: teamId
          in: path
          description: L'id de l'équipe.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Les auteurs de la team {teamId} ont étés retournés
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
  /teams/{teamId}/contributions:
    get:
      tags:
        - Team
      summary: Retourne les contributions d'une meme équipe
      parameters:
        - name: teamId
          in: path
          description: L'id de l'équipe.
          required: true
          schema:
            type: integer
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: Les contributions de la team {teamId} ont étés retournés
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contribution'
  /authors:
    get:
      tags:
        - Author
      summary: Récupère tous les auteurs
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: Une liste d'auteurs est retourné
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
    post:
      tags:
        - Author
      summary: Créer un nouvel auteur
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '200':
          description: L'auteur a correctement été créé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
  /authors/{authorId}:
    get:
      tags:
        - Author
      summary: Retourne un auteur
      parameters:
        - name: authorId
          in: path
          description: L'id de l'auteur.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: L'auteur {authorId} a été retourné
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
    put:
      tags:
        - Author
      summary: Modifie un auteur
      parameters:
        - name: authorId
          in: path
          description: L'id de l'auteur.
          required: true
          schema:
            type: integer
      requestBody:
        description: Modifie une auteur possédant l'id {authorId}
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '200':
          description: L'auteur a correctement été mis à jour.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
    delete:
      tags:
        - Author
      summary: Supprime un auteur
      parameters:
        - name: authorId
          in: path
          description: L'id de l'auteur.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: L'auteur {authorId} a correctement été supprimé.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
  /authors/{authorId}/team:
    get:
      tags:
        - Author
      summary: Retourne l'équipe d'un auteur
      parameters:
        - name: authorId
          in: path
          description: L'id de l'auteur.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: L'équipe de l'auteur {authorId} a été retourné
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
  /submissions:
    get:
      tags:
        - Submission
      summary: Récupère toutes les soumissions
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: Une liste de soumissions est retournée
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Submission'
    post:
      tags:
        - Submission
      summary: Créer un nouvelle soumission
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Submission'
      responses:
        '200':
          description: Une soumission a correctement été créée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission'
  /submissions/{submissionId}:
    get:
      tags:
        - Submission
      summary: Retourne une soumission
      parameters:
        - name: submissionId
          in: path
          description: L'id de la soumission.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: La soumission {submissionId} a été retournée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission'
    put:
      tags:
        - Submission
      summary: Modifie une soumission
      parameters:
        - name: submissionId
          in: path
          description: L'id de la soumission.
          required: true
          schema:
            type: integer
      requestBody:
        description: Modifie une soumission possédant l'id {submissionId}
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Submission'
      responses:
        '200':
          description: La soumission a correctement été mise à jour.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission'
    delete:
      tags:
        - Submission
      summary: Supprime un soumission
      parameters:
        - name: submissionId
          in: path
          description: L'id de la soumission.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: La soumission {submissionId} a correctement été supprimée.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission'
  /submissions/{submissionId}/contribution:
    get:
      tags:
        - Submission
      summary: Retourne la contribution d'une soumission
      parameters:
        - name: submissionId
          in: path
          description: L'id de la soumission.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: La contribution de la soumission {submissionId} a été retournée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contribution'
  /submissions/{submissionId}/venue:
    get:
      tags:
        - Submission
      summary: Retourne la venue d'une soumission
      parameters:
        - name: submissionId
          in: path
          description: L'id de la soumission.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: La venue de la soumission {submissionId} a été retournée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venue'
  /venues:
    get:
      tags:
        - Venue
      summary: Récupère toutes les venues
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          description: Une liste de venues est retournée
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Venue'
    post:
      tags:
        - Venue
      summary: Créer un nouvelle venue
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Venue'
      responses:
        '200':
          description: Une venue a correctement été créée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venue'
  /venues/{venueId}:
    get:
      tags:
        - Venue
      summary: Retourne une venue
      parameters:
        - name: venueId
          in: path
          description: L'id de la venue.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: La venue {venueId} a été retournée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venue'
    put:
      tags:
        - Venue
      summary: Modifie une venue
      parameters:
        - name: venueId
          in: path
          description: L'id de la venue.
          required: true
          schema:
            type: integer
      requestBody:
        description: Modifie une venue possédant l'id {venueId}
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Venue'
      responses:
        '200':
          description: La venue a correctement été mise à jour.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venue'
    delete:
      tags:
        - Venue
      summary: Supprime un venue
      parameters:
        - name: venueId
          in: path
          description: L'id de la venue.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: La venue {venueId} a correctement été supprimée.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Venue'
components:
  schemas:
    Contribution:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        abstract:
          type: string
        startDate:
          type: number
        teamId:
          type: number
    Team:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        authors:
          type: array
          items:
            type: number
        location:
          type: string
        contributions:
          type: array
          items:
            type: number
    Author:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        grade:
          type: number
        teamId:
          type: number
    Submission:
      type: object
      properties:
        id:
          type: integer
        contributionId:
          type: number
        title:
          type: string
        abstract:
          type: string
        venueId:
          type: number
        submissionDate:
          type: string
        materialCost:
          type: number
    Venue:
      type: object
      properties:
        id:
          type: integer
        rank:
          type: string
        name:
          type: string
  parameters:
    pageParam:
      name: page
      in: query
      description: Nombre d'éléments à sauter avant de retourner le résultats.
      required: false
      schema:
        minimum: 0
        type: integer
        format: int32
        default: 0
    limitParam:
      name: limit
      in: query
      description: Nombre maximum d'éléments à retourner.
      required: false
      schema:
        maximum: 100
        minimum: 1
        type: integer
        format: int32
        default: 20
